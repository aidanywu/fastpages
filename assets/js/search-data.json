{
  
    
        "post0": {
            "title": "Week 6 Project Approval",
            "content": "Arrays and Images . Arrays and Images | . API . API | .",
            "url": "https://aidanywu.github.io/fastpages/markdown/2022/10/02/week6projectapproval.html",
            "relUrl": "/markdown/2022/10/02/week6projectapproval.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Arrays and Images test",
            "content": "All Manipulations . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String greyScaleFile; private String redScaleFile; private String blueScaleFile; private String greenScaleFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.greyScaleFile = this.outDir + &quot;Grey&quot; + name + &quot;.&quot; + ext; this.redScaleFile = this.outDir + &quot;Red&quot; + name + &quot;.&quot; + ext; this.blueScaleFile = this.outDir + &quot;Blue&quot; + name + &quot;.&quot; + ext; this.greenScaleFile = this.outDir + &quot;Green&quot; + name + &quot;.&quot; + ext; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i+=3) { for (int j = 0; j &lt; img.getWidth(); j+=1) { Color col = new Color(img.getRGB(j, i)); double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 260) { str = &quot; &quot;; } else if (g &gt;= 250) { str = &quot;&#39;&quot;; } else if (g &gt;= 240) { str = &quot;-&quot;; } else if (g &gt;= 230) { str = &quot;,&quot;; } else if (g &gt;= 220) { str = &quot; &quot;&quot;; } else if (g &gt;= 210) { str = &quot;;&quot;; } else if (g &gt;= 200) { str = &quot;*&quot;; } else if (g &gt;= 190) { str = &quot;)&quot;; } else if (g &gt;= 180) { str = &quot;+&quot;; } else if (g &gt;= 170) { str = &quot;L&quot;; } else if (g &gt;= 160) { str = &quot;^&quot;; } else if (g &gt;= 150) { str = &quot;t&quot;; } else if (g &gt;= 140) { str = &quot;*&quot;; } else if (g &gt;= 130) { str = &quot;S&quot;; } else if (g &gt;= 120) { str = &quot;h&quot;; } else if (g &gt;= 110) { str = &quot;4&quot;; } else if (g &gt;= 100) { str = &quot;e&quot;; } else if (g &gt;= 90) { str = &quot;$&quot;; } else if (g &gt;= 80) { str = &quot;Q&quot;; } else if (g &gt;= 70) { str = &quot;N&quot;; } else if (g &gt;= 60) { str= &quot;B&quot;; } else if (g &gt;= 50) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } public void greyScale() { BufferedImage img = null; try { File file = new File(this.greyScaleFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); int grey = (int)(col.getRed()*0.3 + col.getGreen()*0.59 + col.getBlue()*0.11); try { Color rgb = new Color(grey, grey, grey); img.setRGB(j, i, rgb.getRGB()); } catch (Exception ex) { } } } try { ImageIO.write(img, &quot;png&quot;, new File(this.greyScaleFile)); } catch (Exception ex) { } } public void redScale() { BufferedImage img = null; try { File file = new File(this.redScaleFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); int red = (int)(col.getRed()); try { Color rgb = new Color(red, 0, 0); img.setRGB(j, i, rgb.getRGB()); } catch (Exception ex) { } } } try { ImageIO.write(img, &quot;png&quot;, new File(this.redScaleFile)); } catch (Exception ex) { } } public void greenScale() { BufferedImage img = null; try { File file = new File(this.greenScaleFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); int green = (int)(col.getGreen()); try { Color rgb = new Color(0, green, 0); img.setRGB(j, i, rgb.getRGB()); } catch (Exception ex) { } } } try { ImageIO.write(img, &quot;png&quot;, new File(this.greenScaleFile)); } catch (Exception ex) { } } public void blueScale() { BufferedImage img = null; try { File file = new File(this.blueScaleFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); int blue = (int)(col.getBlue()); try { Color rgb = new Color(0, 0, blue); img.setRGB(j, i, rgb.getRGB()); } catch (Exception ex) { } } } try { ImageIO.write(img, &quot;png&quot;, new File(this.blueScaleFile)); } catch (Exception ex) { } } // tester/driver public static void main(String[] args) throws IOException { Pics ascii = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); ascii.printStats(&quot;Original&quot;); ascii.resize(33); ascii.printStats(&quot;Scaled&quot;); ascii.convertToAscii(); Pics grey = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); grey.greyScale(); Pics red = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); red.redScale(); Pics green = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); green.greenScale(); Pics blue = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); blue.blueScale(); } } Pics.main(null); . Original: 499298 389x413 images/MonaLisa.png Scaled: 55625 128x136 images/tmp/MonaLisa.png . ASCII: https://github.com/aidanywu/fastpages/blob/master/_notebooks/images/tmp/MonaLisa.txt . Grey: . . Red: . . Green: . . Blue: . .",
            "url": "https://aidanywu.github.io/fastpages/jupyter/2022/10/02/arraysimages.html",
            "relUrl": "/jupyter/2022/10/02/arraysimages.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Api",
            "content": "State Abbreviation Capital Population Population Density (by km) .",
            "url": "https://aidanywu.github.io/fastpages/markdown/2022/10/02/api.html",
            "relUrl": "/markdown/2022/10/02/api.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Week 5 Design Starters",
            "content": "Fibonacci . Fibonacci | . JavaScript . JavaScript | .",
            "url": "https://aidanywu.github.io/fastpages/markdown/2022/09/25/week5designstarters.html",
            "relUrl": "/markdown/2022/09/25/week5designstarters.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "JavaScript Tutorial",
            "content": "Data . console.log(&quot;Hello, World!&quot;); . Hello, World! . var msg = &quot;Hello, World!&quot;; console.log(msg); . Hello, World! . function logIt(output) { console.log(output); } logIt(msg); . Hello, World! . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;Hello, Students!&quot;); logIt(2022) . Reuse of logIT Hello, Students! 2022 . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;Looking at dynamic nature of types in JavaScript&quot;) logItType(&quot;hello&quot;); // String logItType(2020); // Number logItType([1, 2, 3]); // Object is generic for this Array, which similar to Python List . Looking at dynamic nature of types in JavaScript string ; hello number ; 2020 object ; [ 1, 2, 3 ] . // define a function to hold data for a Person function Person(name, ghID, classOf) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); // json/string is useful when passing data on internet return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); // object type is easy to work with in JavaScript logItType(teacher); // before role logItType(teacher.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;Teacher&quot;); // set the role logItType(teacher); logItType(teacher.toJSON()); . object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} . // define a student Array of Person(s) var students = [ new Person(&quot;Anthony&quot;, &quot;tonyhieu&quot;, 2022), new Person(&quot;Bria&quot;, &quot;B-G101&quot;, 2023), new Person(&quot;Allie&quot;, &quot;xiaoa0&quot;, 2023), new Person(&quot;Tigran&quot;, &quot;Tigran7&quot;, 2023), new Person(&quot;Rebecca&quot;, &quot;Rebecca-123&quot;, 2023) ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // output of Objects and JSON in CompSci classroom logItType(compsci.classroom); // constructed classroom object logItType(compsci.classroom[0].name); // abstract 1st objects name logItType(compsci.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; }, Person { name: &#39;Anthony&#39;, ghID: &#39;tonyhieu&#39;, classOf: 2022, role: &#39;Student&#39; }, Person { name: &#39;Bria&#39;, ghID: &#39;B-G101&#39;, classOf: 2023, role: &#39;Student&#39; }, Person { name: &#39;Allie&#39;, ghID: &#39;xiaoa0&#39;, classOf: 2023, role: &#39;Student&#39; }, Person { name: &#39;Tigran&#39;, ghID: &#39;Tigran7&#39;, classOf: 2023, role: &#39;Student&#39; }, Person { name: &#39;Rebecca&#39;, ghID: &#39;Rebecca-123&#39;, classOf: 2023, role: &#39;Student&#39; } ] string ; Mr M string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} object ; { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row in compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + compsci.classroom[row].name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + compsci.classroom[row].ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + compsci.classroom[row].classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + compsci.classroom[row].role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGitHub IDClass OfRole . Mr M | jm1021 | 1977 | Teacher | Anthony | tonyhieu | 2022 | Student | Bria | B-G101 | 2023 | Student | Allie | xiaoa0 | 2023 | Student | Tigran | Tigran7 | 2023 | Student | Rebecca | Rebecca-123 | 2023 | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://aidanywu.github.io/fastpages/jupyter/2022/09/25/javascript.html",
            "relUrl": "/jupyter/2022/09/25/javascript.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Fibo, Extends and Data Modeling",
            "content": "Fibonacci Superclass . /* * Creator: Nighthawk Coding Society * Mini Lab Name: Fibonacci sequence, featuring a Stream Algorithm * */ import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ abstract class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected abstract void init(); /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } System.out.println(); } } . Fibonacci with For Loop . public class FibF extends Fibo { public void init() { super.name = &quot;For&quot;; int count = super.size; long[] previous = new long[] {0, 1}; for (int i = 0; i &lt; count; i++) { super.setData(previous[0]); previous = new long[] {previous[1], previous[0] + previous[1]}; } } static public void main(String[] args) { long start = System.nanoTime(); FibF fibF = new FibF(); long end = System.nanoTime(); fibF.print(); System.out.println(&quot;Time: &quot; + (end-start) + &quot; ns&quot;); } } FibF.main(null); . Init method = For fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] Time: 25516 ns . Fibonacci with While Loop . public class FibW extends Fibo { public void init() { super.name = &quot;While&quot;; int count = 0; long[] previous = new long[] {0, 1}; while (count &lt; super.size) { super.setData(previous[0]); previous = new long[] {previous[1], previous[0] + previous[1]}; count++; } } static public void main(String[] args) { long start = System.nanoTime(); FibW fibW = new FibW(); long end = System.nanoTime(); fibW.print(); System.out.println(&quot;Time: &quot; + (end-start) + &quot; ns&quot;); } } FibW.main(null); . Init method = While fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] Time: 25798 ns . Fibonacci with Recursive . public class FibR extends Fibo { public void init() { super.name = &quot;While&quot;; long[] previous = new long[] {0, 1}; System.out.print(previous); this.init(0, previous); } public void init(int count, long[] past) { if (count &lt; super.size) { super.setData(past[0]); past = new long[] {past[1], past[0] + past[1]}; count++; this.init(count); } } static public void main(String[] args) { long start = System.nanoTime(); FibR fibR = new FibR(); long end = System.nanoTime(); fibR.print(); System.out.println(&quot;Time: &quot; + (end-start) + &quot; ns&quot;); } } FibR.main(null); . | this.init(count); no suitable method found for init(int) method FibR.init() is not applicable (actual and formal argument lists differ in length) method FibR.init(int,long[]) is not applicable (actual and formal argument lists differ in length) . CollegeBoard Standards . Skill 1.B: Determine code that would be used to complete code segments (ie For, While, Recursion) We used for, while, and recursion in init() of the subclasses to create the Fibonacci sequence. . Skill 4.C: Determine if two or more code segments yield equivalent results (be sure to Discuss how you know results are the same) If both the for and while loop starts at the same number and add 1 until it reaches the same conditional, and the same code block is ran every time, we can determine that the two or more code segments yield equivalent results. In our for loop, we defined i with the same number as count in while, 0. The conditional for both was run when the the index is less than the size. They both also increased by 1 every time the code is ran. The recursive also starts at the same index and increments by 1 every time it is recalled at the end of the code. The overall code in the function also has an if statement that is the same conditional as the for and while loops. . Skill 5.A: Describe the behavior of a given segment of program code (describe the difference in recursion versus for &amp; while loops, perhaps add timing to determine speed) For and while loops repeat the same code block until a condition is evaluated to false. In recursion, the function is recalling itself within its code repeatedly and not just repeating from start to end. For example, in the fist call, the code is ran and when it reaches to the point where it recalls itself, the function calls itself and runs the same code again and calls itself when it reaches the same point, etc. .",
            "url": "https://aidanywu.github.io/fastpages/jupyter/2022/09/25/fibonacci.html",
            "relUrl": "/jupyter/2022/09/25/fibonacci.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Week 4 Free Response Question No. 1",
            "content": "FRQ . FRQ | . Iteration Mini-lab . Iteration Mini-lab | .",
            "url": "https://aidanywu.github.io/fastpages/markdown/2022/09/18/week4frq1.html",
            "relUrl": "/markdown/2022/09/18/week4frq1.html",
            "date": " • Sep 18, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Iteration Mini-lab",
            "content": "Iteration with 2D Array . Print monkeys horizontally and vertically . import java.util.*; class MonkeyLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] monkeys; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of Monkeys */ public MonkeyLoop() { //Storing Data in 2D arrays monkeys = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //Monkey 0 { &quot;Keely &quot;, //[0][0] &quot; /~ &quot;, //[0][1] &quot; C oo &quot;, //[0][2] &quot; _( ^) &quot;, //[0][3] &quot;/ ~ &quot; //[0][4] }, //Monkey 1 { &quot;ejm97 &quot;, //[1][0] &quot;w c(..)o ( &quot;, &quot; __(-) __) &quot;, &quot; / ( &quot;, &quot; /(_)___) &quot;, &quot; w /| &quot;, &quot; | &quot;, &quot; m m &quot; }, //Monkey 2 { &quot;see no evil &quot;, //[2][0] &quot; .- &quot;-. &quot;, &quot; _/_-.-_ _ &quot;, &quot; / __} {__ &quot;, &quot; / // &quot; &quot;, &quot; / / &#39;&#39;/ &quot;, &quot; _/` &quot; &quot; &quot;` _/ / &quot;, &quot; / &quot; }, //Monkey 3 { &quot;have no fun &quot;, //[3][0] &quot; .- &quot;-. &quot;, &quot; _/.-.-. _ &quot;, &quot;( ( o o ) ) &quot;, &quot; |/ &quot; | &quot;, &quot; .-. / &quot;, &quot; /` &quot; &quot; &quot;` &quot;, &quot; / &quot; }, //Monkey 4 { &quot;hear no evil &quot;, //[4][0] &quot; ..-.. &quot;, &quot; /|&#39;.&#39;| &quot;, &quot; ) -/(/ &quot;, &quot; __/ &#39; &#39; __ &quot;, &quot;( (_/-._ _) ) &quot;, &quot; &#39;.Oo___oO.&#39; &quot; }, { &quot;talk no evil &quot;, //[5][0] &quot; _.-._ &quot;, &quot; (_&#39;.&#39;_) &quot;, &quot; ,-.-. &quot;, &quot; __/&#39;-&#39;-&#39; __ &quot;, &quot;( (_/ _) ) &quot;, &quot; &#39;.Oo___oO.&#39; &quot; } }; } public void printHorizontal() { int monkeyCount = monkeys.length; List&lt;Integer&gt; columnLengths = new ArrayList&lt;Integer&gt;(); for (int i = 0; i &lt; monkeyCount; i++) { columnLengths.add(monkeys[i].length); } int maxColLen = Collections.max(columnLengths); //how many separate parts are there in a monkey monkey? for (int row = 0; row &lt; maxColLen; row++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ for (int col = 0; col &lt; monkeyCount; col++) { // prints specific part of the monkey from the column if (monkeys[col].length &gt; row) { System.out.print(monkeys[col][row]); } else { System.out.print(&quot; &quot;); } } System.out.println(); } } public void printVertical() { int monkeyCount = monkeys.length; for (int i = monkeyCount; i &gt;= 1; i--) //loops through 2D array length backwards { //how many separate parts are there in a monkey monkey? for (int row = 0; row &lt; monkeyCount; row++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ for (int col = 0; col &lt; monkeys[row].length; col++) { // prints specific part of the monkey from the column System.out.print(monkeys[row][col] + &quot; &quot;); //this is new line between separate parts System.out.println(); } } } } /** * Loop and print monkeys in array * ... repeat until you reach zero ... */ /* public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Monkey Jumpers Poem in Java Loopy&quot;); // monkeys (non-primitive) defined in constructor knows its length int monkeyCount = monkeys.length; for (int i = monkeyCount; i &gt;= 1; i--) //loops through 2D array length backwards { //this print statement shows current count of Monkeys // concatenation (+) of the loop variable and string to form a countdown message System.out.println(i + &quot; little monkeys jumping on the bed...&quot;); //how many separate parts are there in a monkey monkey? for (int row = 0; row &lt; monkeyCount; row++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ /* for (int col = 0; col &lt; monkeys[row].length; col++) { // prints specific part of the monkey from the column System.out.print(monkeys[row][col] + &quot; &quot;); //this is new line between separate parts System.out.println(); } //this new line gives separation between stanza of poem System.out.println(); } //countdown for poem, decrementing monkeyCount variable by 1 monkeyCount -= 1; } //out of all the loops, prints finishing messages System.out.println(&quot;No more monkeys jumping on the bed&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } */ /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { MonkeyLoop monke = new MonkeyLoop(); monke.printHorizontal(); monke.printVertical(); // monke.printPoem(); } } MonkeyLoop.main(null); . Keely ejm97 see no evil have no fun hear no evil talk no evil /~ w c(..)o ( .-&#34;-. .-&#34;-. ..-.. _.-._ C oo __(-) __) _/_-.-_ _ _/.-.-. _ /|&#39;.&#39;| (_&#39;.&#39;_) _( ^) / ( / __} {__ ( ( o o ) ) ) -/(/ ,-.-. / ~ /(_)___) / // &#34; |/ &#34; | __/ &#39; &#39; __ __/&#39;-&#39;-&#39; __ w /| / / &#39;&#39;/ .-. / ( (_/-._ _) ) ( (_/ _) ) | _/`&#34;&#34;&#34;` _/ / /`&#34;&#34;&#34;` &#39;.Oo___oO.&#39; &#39;.Oo___oO.&#39; m m / / Keely /~ C oo _( ^) / ~ ejm97 w c(..)o ( __(-) __) / ( /(_)___) w /| | m m see no evil .-&#34;-. _/_-.-_ _ / __} {__ / // &#34; / / &#39;&#39;/ _/`&#34;&#34;&#34;` _/ / / have no fun .-&#34;-. _/.-.-. _ ( ( o o ) ) |/ &#34; | .-. / /`&#34;&#34;&#34;` / hear no evil ..-.. /|&#39;.&#39;| ) -/(/ __/ &#39; &#39; __ ( (_/-._ _) ) &#39;.Oo___oO.&#39; talk no evil _.-._ (_&#39;.&#39;_) ,-.-. __/&#39;-&#39;-&#39; __ ( (_/ _) ) &#39;.Oo___oO.&#39; Keely /~ C oo _( ^) / ~ ejm97 w c(..)o ( __(-) __) / ( /(_)___) w /| | m m see no evil .-&#34;-. _/_-.-_ _ / __} {__ / // &#34; / / &#39;&#39;/ _/`&#34;&#34;&#34;` _/ / / have no fun .-&#34;-. _/.-.-. _ ( ( o o ) ) |/ &#34; | .-. / /`&#34;&#34;&#34;` / hear no evil ..-.. /|&#39;.&#39;| ) -/(/ __/ &#39; &#39; __ ( (_/-._ _) ) &#39;.Oo___oO.&#39; talk no evil _.-._ (_&#39;.&#39;_) ,-.-. __/&#39;-&#39;-&#39; __ ( (_/ _) ) &#39;.Oo___oO.&#39; Keely /~ C oo _( ^) / ~ ejm97 w c(..)o ( __(-) __) / ( /(_)___) w /| | m m see no evil .-&#34;-. _/_-.-_ _ / __} {__ / // &#34; / / &#39;&#39;/ _/`&#34;&#34;&#34;` _/ / / have no fun .-&#34;-. _/.-.-. _ ( ( o o ) ) |/ &#34; | .-. / /`&#34;&#34;&#34;` / hear no evil ..-.. /|&#39;.&#39;| ) -/(/ __/ &#39; &#39; __ ( (_/-._ _) ) &#39;.Oo___oO.&#39; talk no evil _.-._ (_&#39;.&#39;_) ,-.-. __/&#39;-&#39;-&#39; __ ( (_/ _) ) &#39;.Oo___oO.&#39; Keely /~ C oo _( ^) / ~ ejm97 w c(..)o ( __(-) __) / ( /(_)___) w /| | m m see no evil .-&#34;-. _/_-.-_ _ / __} {__ / // &#34; / / &#39;&#39;/ _/`&#34;&#34;&#34;` _/ / / have no fun .-&#34;-. _/.-.-. _ ( ( o o ) ) |/ &#34; | .-. / /`&#34;&#34;&#34;` / hear no evil ..-.. /|&#39;.&#39;| ) -/(/ __/ &#39; &#39; __ ( (_/-._ _) ) &#39;.Oo___oO.&#39; talk no evil _.-._ (_&#39;.&#39;_) ,-.-. __/&#39;-&#39;-&#39; __ ( (_/ _) ) &#39;.Oo___oO.&#39; Keely /~ C oo _( ^) / ~ ejm97 w c(..)o ( __(-) __) / ( /(_)___) w /| | m m see no evil .-&#34;-. _/_-.-_ _ / __} {__ / // &#34; / / &#39;&#39;/ _/`&#34;&#34;&#34;` _/ / / have no fun .-&#34;-. _/.-.-. _ ( ( o o ) ) |/ &#34; | .-. / /`&#34;&#34;&#34;` / hear no evil ..-.. /|&#39;.&#39;| ) -/(/ __/ &#39; &#39; __ ( (_/-._ _) ) &#39;.Oo___oO.&#39; talk no evil _.-._ (_&#39;.&#39;_) ,-.-. __/&#39;-&#39;-&#39; __ ( (_/ _) ) &#39;.Oo___oO.&#39; Keely /~ C oo _( ^) / ~ ejm97 w c(..)o ( __(-) __) / ( /(_)___) w /| | m m see no evil .-&#34;-. _/_-.-_ _ / __} {__ / // &#34; / / &#39;&#39;/ _/`&#34;&#34;&#34;` _/ / / have no fun .-&#34;-. _/.-.-. _ ( ( o o ) ) |/ &#34; | .-. / /`&#34;&#34;&#34;` / hear no evil ..-.. /|&#39;.&#39;| ) -/(/ __/ &#39; &#39; __ ( (_/-._ _) ) &#39;.Oo___oO.&#39; talk no evil _.-._ (_&#39;.&#39;_) ,-.-. __/&#39;-&#39;-&#39; __ ( (_/ _) ) &#39;.Oo___oO.&#39; . Questions . Is this program in more of an Imperative Programming Style or OOP style? Explain. . This program is in more of an OOP style because we are creating classes that has different functions within the MonkeyLoop class. We also run this program by initializing the object from the class MonkeyLoop and running its attributes. . Is each Monkey an object? . Each monkey is not an object because they are just a bunch of strings together. .",
            "url": "https://aidanywu.github.io/fastpages/jupyter/2022/09/18/iterationminilab.html",
            "relUrl": "/jupyter/2022/09/18/iterationminilab.html",
            "date": " • Sep 18, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Free Response Question No. 1",
            "content": "2021 FRQ 1 . 1) . a) . public class WordMatch { /** The secret string. */ private String secret; /** Constructs a WordMatch object with the given secret string of lowercase letters. */ public WordMatch (String word) { /* implementation not shown */ } /** Returns a score for guess, as described in part (a). * Precondition: 0 &lt; guess.length() &lt;= secret.length() */ public int scoreGuess (String guess) { int score = 0; for (int i = 0; i &lt; secret.length()-guess.length(); i++) { if (secret.substring(i + guess.length()).equals(guess)) { score++; } } return score * guess.length() * guess.length(); } public String findBetterGuess (String guess1, String guess2) { // part b } } . Comments . I had to google how to do substring in java but that was the only hard part . b) . public class WordMatch { /** The secret string. */ private String secret; /** Constructs a WordMatch object with the given secret string of lowercase letters. */ public WordMatch (String word) { /* implementation not shown */ } /** Returns a score for guess, as described in part (a). * Precondition: 0 &lt; guess.length() &lt;= secret.length() */ public int scoreGuess (String guess) { // part a } public String findBetterGuess (String guess1, String guess2) { if (scoreGuess(guess1) &gt; scoreGuess(guess2)) { return guess1; } else if (scoreGuess(guess1) &lt; scoreGuess(guess2)) { return guess2; } else if (guess1.compareTo(guess2) &gt; 0) { return guess1; } } } . Comments . The first two ifs were very simple but the alphabetical condition was a little more difficult. I didn&#39;t know how to compare effectively in Java and I had to google, find out about the compareTo() function, then learn what it does. .",
            "url": "https://aidanywu.github.io/fastpages/jupyter/2022/09/18/frq1.html",
            "relUrl": "/jupyter/2022/09/18/frq1.html",
            "date": " • Sep 18, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Week 3 Innovation -- Backend Development",
            "content": "Lesson on ifs and expressions . Ifs | . Focus/Habits . Focus/Habits | . Deployment on AWS . Deployed Website | .",
            "url": "https://aidanywu.github.io/fastpages/markdown/2022/09/11/week3backenddevelopment.html",
            "relUrl": "/markdown/2022/09/11/week3backenddevelopment.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Focus and Habits",
            "content": "Notes and Reflection . Students are often too stressed and overwhelmed in school | Putting off work isn’t good for our health | Appreciate the smaller things and the present in life | Goals are helpful | Learn to take breaks and do something you like | . Goals . Stop putting APUSH notes off until Thursday since it will take many hours to do | Better balance between academics, athletics, and sleep | .",
            "url": "https://aidanywu.github.io/fastpages/markdown/2022/09/11/focushabits.html",
            "relUrl": "/markdown/2022/09/11/focushabits.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "If-ifelse-else Statements",
            "content": "If Statements . If the conditional is true, run the code block . // 1+1 does equal 2, therefore the code block is ran and the system prints out &quot;1+1=2&quot; if (1+1 == 2) { System.out.println(&quot;1+1=2&quot;); } // 1+1 does not equal 3, therefore the code block will not run and the system does not print out &quot;1+1=3&quot; if (1+1 == 3) { System.out.println(&quot;1+1=3&quot;); } . 1+1=2 . If-else Statements . If the conditional is true, run the code block inside if If the conditional is false, run the code block inside else . // 1+1 does equal 2, therefore the code block inside if is ran and the system prints out &quot;1+1=2&quot; if (1+1 == 2) { System.out.println(&quot;1+1=2&quot;); } else { System.out.println(&quot;1+1!=2&quot;); } // 1+1 does not equal 3, therefore the code block inside else is ran and the system prints out &quot;1+1!=2&quot; if (1+1 == 3) { System.out.println(&quot;1+1=3&quot;); } else { System.out.println(&quot;1+1!=3&quot;); } . 1+1=2 1+1!=3 . If-elseif-else Statements . Goes through each if and elseif conditionals to see if it is true, if a conditional is true, the code block inside it will run If none of the conditionals are true, code block inside else will run . if (1+1 == 0) { // Because 1+1 does not equal 0, this does not run System.out.println(&quot;1+1=0&quot;); } else if (1+1 == 1) { // Because 1+1 does not equal 1, this does not run System.out.println(&quot;1+1=1&quot;); } else if (1+1 == 2) { // Because 1+1 does equal 2, this does run System.out.println(&quot;1+1=2&quot;); } else if (1+1 == 3) { // skips this conditional because previous conditional already evaluated to be true System.out.println(&quot;1+1=3&quot;); } else { // skips this because 1+1 == 2 conditional already evaluated to be true System.out.println(&quot;1+1 does not equal 0, 1, 2, or 3&quot;); } . 1+1=2 . Letter Grade Calculator with If-elseif-else statements . double Grade = 93.9; if (Grade &lt; 60) { // If Grade is less than 60 System.out.print(&quot;F&quot;); } else if (Grade &lt; 70) { //If Grade is less than 70 (60 or greater because previous conditional cleared to be false) System.out.print(&quot;D&quot;); } else if (Grade &lt; 80) { //If Grade is less than 80 (70 or greater because previous conditionals cleared to be false) System.out.print(&quot;C&quot;); } else if (Grade &lt; 90) { //If Grade is less than 90 (80 or greater because previous conditionals cleared to be false) System.out.print(&quot;B&quot;); } else { //If Grade is 90 or greater (because previous conditionals cleared to be false) System.out.print(&quot;A&quot;); } . A . Letter Grade Calculator with switch-case statements . import java.lang.Math; double Grade = 93.9; int floor = (int) Math.floor(Grade / 10) * 10; switch(floor) { case 80: // If Grade is 80 up to but not including 90 System.out.println(&quot;B&quot;); break; case 70: // If Grade is 70 up to but not including 80 System.out.println(&quot;C&quot;); break; case 60: // If Grade is 60 up to but not including 70 System.out.println(&quot;D&quot;); break; case 50: // If Grade is 50 up to but not including 60 System.out.println(&quot;F&quot;); break; case 40: // If Grade is 40 up to but not including 50 System.out.println(&quot;F&quot;); break; case 30: // If Grade is 30 up to but not including 40 System.out.println(&quot;F&quot;); break; case 20: // If Grade is 20 up to but not including 30 System.out.println(&quot;F&quot;); break; case 10: // If Grade is 10 up to but not including 20 System.out.println(&quot;F&quot;); break; case 0: // If Grade is 0 up to but not including 10 System.out.println(&quot;F&quot;); break; default: // anything else so f Grade is 90 or more or less than 0 System.out.println(&quot;you either have negative grade or an A&quot;); break; } . you either have negative grade or an A . De Morgan&#39;s law . From Wikipedia: . The negation of a disjunction is the conjunction of the negations | The negation of a conjunction is the disjunction of the negations or | The complement of the union of two sets is the same as the intersection of their complements | The complement of the intersection of two sets is the same as the union of their complements | . NOT(A or B) is the same as NOT(A) and NOT(B) NOT(A and B) is the same as NOT(A) or NOT(B) . . boolean a = true; boolean b = false; System.out.println(&quot;A is &quot; + a); System.out.println(&quot;B is &quot; + b); System.out.println(&quot;NOT(A or B): &quot; + Boolean.toString(!(a||b))); System.out.println(&quot;NOT(A) and NOT(B): &quot; + Boolean.toString((!a)&amp;&amp;(!b))); System.out.println(&quot;NOT(A and B): &quot; + Boolean.toString(!(a&amp;&amp;b))); System.out.println(&quot;NOT(A) or NOT(B): &quot; + Boolean.toString((!a)||(!b))); if ((!(a||b)) == ((!a)&amp;&amp;(!b))) { System.out.print(&quot;NOT(A or B) is the same as NOT(A) and NOT(B) n&quot;); } if ((!(a&amp;&amp;b)) == ((!a)||(!b))) { System.out.print(&quot;NOT(A and B) is the same as NOT(A) or NOT(B)&quot;); } . A is true B is false NOT(A or B): false NOT(A) and NOT(B): false NOT(A and B): true NOT(A) or NOT(B): true NOT(A or B) is the same as NOT(A) and NOT(B) NOT(A and B) is the same as NOT(A) or NOT(B) .",
            "url": "https://aidanywu.github.io/fastpages/jupyter/2022/09/10/if-ifelse.html",
            "relUrl": "/jupyter/2022/09/10/if-ifelse.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Week 2 Innovation -- Using Objects",
            "content": "Code.org . Key Learnings from Code.org Unit 1 | Evidence of finishing Unit 1: | . Using Objects Tech Talk . Java Menu | . Team . Team Repository | .",
            "url": "https://aidanywu.github.io/fastpages/markdown/2022/09/05/week2usingobjects.html",
            "relUrl": "/markdown/2022/09/05/week2usingobjects.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Java Menu",
            "content": "// imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object boolean quit = false; while (!quit) { try { // scan for Input this.print(); // print Menu int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Unit Converter&quot;); System.out.println(&quot;2 - Inverse Calculator&quot;); System.out.println(&quot;3 - Right Triangle Hypotenuse Calculator&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;bye&quot;); quit = true; break; case 1: unitConverter(); break; case 2: inverse(); break; case 3: hypotenuseCalc(); break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } public void unitConverter() { int choice = 0; double num = 0.0; Scanner in = new Scanner(System.in); System.out.print(&quot;In what unit is your current number in? (1=meters;2=feet;3=miles) n&quot;); try { choice = in.nextInt(); System.out.println(choice); } catch (Exception e) { System.out.println(&quot;not an int&quot;); } in.close(); in = new Scanner(System.in); System.out.print(&quot;whats the number you want to convert n&quot;); try { num = in.nextDouble(); System.out.println(num); } catch (Exception e) { System.out.println(&quot;not a double&quot;); } in.close(); if (choice==1) { double feet = num*3.28084; double miles = num*0.000621371; System.out.println(num + &quot; in feet is &quot; + feet + &quot; ft n&quot; + num + &quot; in miles is &quot; + miles + &quot; mi&quot;); } else if (choice==2) { double meter = num*0.3048; double miles = num/5280; System.out.println(num + &quot; in meters is &quot; + meter + &quot; m n&quot; + num + &quot; in miles is &quot; + miles + &quot; mi&quot;); } else if (choice==3) { double meter = num*1609.34; double feet = num*5280; System.out.println(num + &quot; in meters is &quot; + meter + &quot; m n&quot; + num + &quot; in feet is &quot; + feet + &quot; ft&quot;); } } public void inverse() { double num = 0.0; Scanner in = new Scanner(System.in); in = new Scanner(System.in); System.out.print(&quot;what do you want to find the inverse of n&quot;); try { num = in.nextDouble(); System.out.println(num); } catch (Exception e) { System.out.println(&quot;not a double&quot;); } in.close(); System.out.println(&quot;the inverse of &quot; + num + &quot; is &quot; + 1/num); } public void hypotenuseCalc() { double num1 = 0.0; double num2 = 0.0; Scanner in = new Scanner(System.in); in = new Scanner(System.in); System.out.print(&quot;what is the length of one side n&quot;); try { num1 = in.nextDouble(); System.out.println(num1); } catch (Exception e) { System.out.println(&quot;not a double&quot;); } in.close();in = new Scanner(System.in); System.out.print(&quot;what is the length of the other side n&quot;); try { num2 = in.nextDouble(); System.out.println(num2); } catch (Exception e) { System.out.println(&quot;not a double&quot;); } in.close(); System.out.println(&quot;the length of the hypotenuse is &quot; + Math.sqrt(Math.pow(num1, 2) + Math.pow(num2, 2))); } } Menu.main(null); . - Choose from these choices - 1 - Unit Converter 2 - Inverse Calculator 3 - Right Triangle Hypotenuse Calculator 0 - Quit - 1: In what unit is your current number in? (1=meters;2=feet;3=miles) 1 whats the number you want to convert 6900.0 6900.0 in feet is 22637.796 ft 6900.0 in miles is 4.2874599 mi - Choose from these choices - 1 - Unit Converter 2 - Inverse Calculator 3 - Right Triangle Hypotenuse Calculator 0 - Quit - 2: what do you want to find the inverse of 69.0 the inverse of 69.0 is 0.014492753623188406 - Choose from these choices - 1 - Unit Converter 2 - Inverse Calculator 3 - Right Triangle Hypotenuse Calculator 0 - Quit - 3: what is the length of one side 5.0 what is the length of the other side 12.0 the length of the hypotenuse is 13.0 - Choose from these choices - 1 - Unit Converter 2 - Inverse Calculator 3 - Right Triangle Hypotenuse Calculator 0 - Quit - 0: bye .",
            "url": "https://aidanywu.github.io/fastpages/jupyter/2022/09/05/javamenu.html",
            "relUrl": "/jupyter/2022/09/05/javamenu.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Unit 1 Key Learnings",
            "content": "// import existing packages import org.code.neighborhood.*; . // Defining a class called MyNeighborhood public class MyNeighborhood { public static void main(String[] args) { // creating an instance of PainterPlus() with variable name myBackgroundPainter PainterPlus myPainterPlus = new PainterPlus(); // Running turnRight() method from PainterPlus instance myPainterPlus.turnRight(); } } . // Creating subclass of PainterPlus which inherits attributes from superclass Painter public class PainterPlus extends Painter { public PainterPlus() { super(); } // Defining public turnRight() method with no return types in PainterPlus class public void turnRight() { turnLeft(); turnLeft(); turnLeft(); } } . Key Learnings . Creating and using objects use &quot;public class&quot; to create a class Within the class, use &quot;public&quot; to define methods that can used outside and inside the class and &quot;private&quot; to define methods that can only be used within the class. | &quot;void&quot; is used to specify that the respective method does not return anything | &quot;static&quot; means that no matter how many times the method is initialized, it will only be created once, therefore all instances created shares a single field. It belongs to itself instead of an instance. | . | use &quot;[Class Name] [Variable Name] = new [Class Name] ();&quot; to create new object of the specified class | use period (.) after object variable to use its method | . | Extend &quot;extends&quot; makes the class defined before it a subclass of the superclass (an already defined class you are extending) that is defined after &quot;extends&quot; | The subclass inherits all of the superclass&#39;s attributes | . | .",
            "url": "https://aidanywu.github.io/fastpages/jupyter/2022/09/05/code.orgunit1keylearnings.html",
            "relUrl": "/jupyter/2022/09/05/code.orgunit1keylearnings.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Week 1 Innovation -- Primitives",
            "content": "Code.org . Evidence of finishing Lessons 1-5: | . Productive Blogging . Demonstrating Java primitives knowledge | Using Bash to check for key tools installation | College Board Unit notes | .",
            "url": "https://aidanywu.github.io/fastpages/markdown/2022/08/28/week1primitives.html",
            "relUrl": "/markdown/2022/08/28/week1primitives.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Key Tools Installation Check",
            "content": "Python . python --version . Python 3.9.12 . Jupyter . conda --version echo conda list | grep jupyter . conda 4.13.0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . Jupyter Kernels . jupyter kernelspec list . Available kernels: bash /home/bosniancapability/.local/share/jupyter/kernels/bash java /home/bosniancapability/.local/share/jupyter/kernels/java javascript /home/bosniancapability/.local/share/jupyter/kernels/javascript python3 /home/bosniancapability/.local/share/jupyter/kernels/python3 . Java . javac --version echo java --version . javac 11.0.16 openjdk 11.0.16 2022-07-19 OpenJDK Runtime Environment (build 11.0.16+8-post-Ubuntu-0ubuntu120.04) OpenJDK 64-Bit Server VM (build 11.0.16+8-post-Ubuntu-0ubuntu120.04, mixed mode, sharing) .",
            "url": "https://aidanywu.github.io/fastpages/jupyter/2022/08/28/keytoolsbash.html",
            "relUrl": "/jupyter/2022/08/28/keytoolsbash.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Unit Converter",
            "content": "import java.util.Scanner; public class UnitConverter { public static void main(String[] args) { int choice = 0; double num = 0.0; Scanner in = new Scanner(System.in); System.out.print(&quot;In what unit is your current number in? (1=meters;2=feet;3=miles) n&quot;); try { choice = in.nextInt(); System.out.println(choice); } catch (Exception e) { System.out.println(&quot;not an int&quot;); } in.close(); in = new Scanner(System.in); System.out.print(&quot;whats the number you want to convert n&quot;); try { num = in.nextDouble(); System.out.println(num); } catch (Exception e) { System.out.println(&quot;not a double&quot;); } in.close(); if (choice==1) { double feet = num*3.28084; double miles = num*0.000621371; System.out.println(num + &quot; in feet is &quot; + feet + &quot; ft n&quot; + num + &quot; in miles is &quot; + miles + &quot; mi&quot;); } else if (choice==2) { double meter = num*0.3048; double miles = num/5280; System.out.println(num + &quot; in meters is &quot; + meter + &quot; m n&quot; + num + &quot; in miles is &quot; + miles + &quot; mi&quot;); } else if (choice==3) { double meter = num*1609.34; double feet = num*5280; System.out.println(num + &quot; in meters is &quot; + meter + &quot; m n&quot; + num + &quot; in feet is &quot; + feet + &quot; ft&quot;); } } } UnitConverter.main(null); . In what unit is your current number in? (1=meters;2=feet;3=miles) 3 whats the number you want to convert 69.0 69.0 in meters is 111044.45999999999 m 69.0 in feet is 364320.0 ft .",
            "url": "https://aidanywu.github.io/fastpages/jupyter/2022/08/28/javaunitcon.html",
            "relUrl": "/jupyter/2022/08/28/javaunitcon.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "College Board Units 1-10 Learning",
            "content": "Unit 1 Primitive Types . AP Exam Weighting 2.5-5% . Unit 2 Using Objects . AP Exam Weighting 5-7.5% . Unit 3 Boolean Expressions and if Statements . AP Exam Weighting 15-17.5% . Unit 4 Iteration . AP Exam Weighting 17.5-22.5% . Unit 5 Writing Classes . AP Exam Weighting 5-7.5% . Unit 6 Array . AP Exam Weighting 10-15% . Unit 7 ArrayList . AP Exam Weighting 2.5-7.5% . Unit 8 2D Array . AP Exam Weighting 7.5-10% . Unit 9 Inheritance . AP Exam Weighting 5-10% . Unit 10 Recursion . AP Exam Weighting 5-7.5% .",
            "url": "https://aidanywu.github.io/fastpages/markdown/2022/08/28/cb1-10.html",
            "relUrl": "/markdown/2022/08/28/cb1-10.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Python Hello",
            "content": "print(&quot;Hello&quot;) . Hello .",
            "url": "https://aidanywu.github.io/fastpages/jupyter/2022/08/21/pythonhi.html",
            "relUrl": "/jupyter/2022/08/21/pythonhi.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "HTML and Markdown",
            "content": "markdown1 . markdown2 . markdown3 . markdown4 . markdown5 . markdown . h1 . h2 . h3 . h4 . h5 . p . link .",
            "url": "https://aidanywu.github.io/fastpages/markdown/2022/08/21/markdownhtmlpost.html",
            "relUrl": "/markdown/2022/08/21/markdownhtmlpost.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Java Hello",
            "content": "System.out.println(&quot;Hello&quot;) . Hello .",
            "url": "https://aidanywu.github.io/fastpages/jupyter/2022/08/21/javahi.html",
            "relUrl": "/jupyter/2022/08/21/javahi.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://aidanywu.github.io/fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post23": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://aidanywu.github.io/fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://aidanywu.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://aidanywu.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}